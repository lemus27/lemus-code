/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class charva_awt_Toolkit */

#ifndef _Included_charva_awt_Toolkit
#define _Included_charva_awt_Toolkit
#ifdef __cplusplus
extern "C" {
#endif
/* Inaccessible static: LOG */
/* Inaccessible static: _instance */
/* Inaccessible static: _lastFocusEvent */
/* Inaccessible static: _scriptPrintStream */
#undef charva_awt_Toolkit_Auml
#define charva_awt_Toolkit_Auml 196L
#undef charva_awt_Toolkit_Ccedil
#define charva_awt_Toolkit_Ccedil 199L
#undef charva_awt_Toolkit_Eacute
#define charva_awt_Toolkit_Eacute 201L
#undef charva_awt_Toolkit_Euml
#define charva_awt_Toolkit_Euml 203L
#undef charva_awt_Toolkit_Ouml
#define charva_awt_Toolkit_Ouml 214L
#undef charva_awt_Toolkit_Uuml
#define charva_awt_Toolkit_Uuml 220L
/* Inaccessible static: isColorEnabled */
/* Inaccessible static: A_NORMAL */
/* Inaccessible static: A_STANDOUT */
/* Inaccessible static: A_UNDERLINE */
/* Inaccessible static: A_REVERSE */
/* Inaccessible static: A_BLINK */
/* Inaccessible static: A_DIM */
/* Inaccessible static: A_BOLD */
/* Inaccessible static: A_ALTCHARSET */
/* Inaccessible static: A_INVIS */
/* Inaccessible static: ACS_ULCORNER */
/* Inaccessible static: ACS_LLCORNER */
/* Inaccessible static: ACS_URCORNER */
/* Inaccessible static: ACS_LRCORNER */
/* Inaccessible static: ACS_LTEE */
/* Inaccessible static: ACS_RTEE */
/* Inaccessible static: ACS_BTEE */
/* Inaccessible static: ACS_TTEE */
/* Inaccessible static: ACS_HLINE */
/* Inaccessible static: ACS_VLINE */
/* Inaccessible static: ACS_PLUS */
/* Inaccessible static: ACS_S1 */
/* Inaccessible static: ACS_S9 */
/* Inaccessible static: ACS_DIAMOND */
/* Inaccessible static: ACS_CKBOARD */
/* Inaccessible static: ACS_DEGREE */
/* Inaccessible static: ACS_PLMINUS */
/* Inaccessible static: ACS_BULLET */
/* Inaccessible static: BLACK */
/* Inaccessible static: RED */
/* Inaccessible static: GREEN */
/* Inaccessible static: YELLOW */
/* Inaccessible static: BLUE */
/* Inaccessible static: MAGENTA */
/* Inaccessible static: CYAN */
/* Inaccessible static: WHITE */
/* Inaccessible static: _defaultForeground */
/* Inaccessible static: _defaultBackground */
#undef charva_awt_Toolkit_KEY_MOUSE
#define charva_awt_Toolkit_KEY_MOUSE 409L
#undef charva_awt_Toolkit_BUTTON1_RELEASED
#define charva_awt_Toolkit_BUTTON1_RELEASED 1L
#undef charva_awt_Toolkit_BUTTON1_PRESSED
#define charva_awt_Toolkit_BUTTON1_PRESSED 2L
#undef charva_awt_Toolkit_BUTTON1_CLICKED
#define charva_awt_Toolkit_BUTTON1_CLICKED 4L
#undef charva_awt_Toolkit_BUTTON2_RELEASED
#define charva_awt_Toolkit_BUTTON2_RELEASED 64L
#undef charva_awt_Toolkit_BUTTON2_PRESSED
#define charva_awt_Toolkit_BUTTON2_PRESSED 128L
#undef charva_awt_Toolkit_BUTTON2_CLICKED
#define charva_awt_Toolkit_BUTTON2_CLICKED 256L
#undef charva_awt_Toolkit_BUTTON3_RELEASED
#define charva_awt_Toolkit_BUTTON3_RELEASED 4096L
#undef charva_awt_Toolkit_BUTTON3_PRESSED
#define charva_awt_Toolkit_BUTTON3_PRESSED 8192L
#undef charva_awt_Toolkit_BUTTON3_CLICKED
#define charva_awt_Toolkit_BUTTON3_CLICKED 16384L
/* Inaccessible static: class_00024charva_00024awt_00024Toolkit */
/*
 * Class:     charva_awt_Toolkit
 * Method:    close
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_charva_awt_Toolkit_close
  (JNIEnv *, jobject);

/*
 * Class:     charva_awt_Toolkit
 * Method:    clear
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_charva_awt_Toolkit_clear
  (JNIEnv *, jobject);

/*
 * Class:     charva_awt_Toolkit
 * Method:    setCursor
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_charva_awt_Toolkit_setCursor
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     charva_awt_Toolkit
 * Method:    addChar
 * Signature: (III)V
 */
JNIEXPORT void JNICALL Java_charva_awt_Toolkit_addChar
  (JNIEnv *, jobject, jint, jint, jint);

/*
 * Class:     charva_awt_Toolkit
 * Method:    addHorizontalLine
 * Signature: (III)V
 */
JNIEXPORT void JNICALL Java_charva_awt_Toolkit_addHorizontalLine
  (JNIEnv *, jobject, jint, jint, jint);

/*
 * Class:     charva_awt_Toolkit
 * Method:    addVerticalLine
 * Signature: (III)V
 */
JNIEXPORT void JNICALL Java_charva_awt_Toolkit_addVerticalLine
  (JNIEnv *, jobject, jint, jint, jint);

/*
 * Class:     charva_awt_Toolkit
 * Method:    addString
 * Signature: (Ljava/lang/String;II)V
 */
JNIEXPORT void JNICALL Java_charva_awt_Toolkit_addString
  (JNIEnv *, jobject, jstring, jint, jint);

/*
 * Class:     charva_awt_Toolkit
 * Method:    drawBoxNative
 * Signature: (IIIII)V
 */
JNIEXPORT void JNICALL Java_charva_awt_Toolkit_drawBoxNative
  (JNIEnv *, jobject, jint, jint, jint, jint, jint);

/*
 * Class:     charva_awt_Toolkit
 * Method:    blankBoxNative
 * Signature: (IIIII)V
 */
JNIEXPORT void JNICALL Java_charva_awt_Toolkit_blankBoxNative
  (JNIEnv *, jobject, jint, jint, jint, jint, jint);

/*
 * Class:     charva_awt_Toolkit
 * Method:    setClipRectNative
 * Signature: (IIII)V
 */
JNIEXPORT void JNICALL Java_charva_awt_Toolkit_setClipRectNative
  (JNIEnv *, jobject, jint, jint, jint, jint);

/*
 * Class:     charva_awt_Toolkit
 * Method:    resetClipRect
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_charva_awt_Toolkit_resetClipRect
  (JNIEnv *, jobject);

/*
 * Class:     charva_awt_Toolkit
 * Method:    beep
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_charva_awt_Toolkit_beep
  (JNIEnv *, jobject);

/*
 * Class:     charva_awt_Toolkit
 * Method:    getScreenRows
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_charva_awt_Toolkit_getScreenRows
  (JNIEnv *, jobject);

/*
 * Class:     charva_awt_Toolkit
 * Method:    getScreenColumns
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_charva_awt_Toolkit_getScreenColumns
  (JNIEnv *, jobject);

/*
 * Class:     charva_awt_Toolkit
 * Method:    hasColors
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_charva_awt_Toolkit_hasColors
  (JNIEnv *, jobject);

/*
 * Class:     charva_awt_Toolkit
 * Method:    getMaxColorPairs
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_charva_awt_Toolkit_getMaxColorPairs
  (JNIEnv *, jobject);

/*
 * Class:     charva_awt_Toolkit
 * Method:    startColors
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_charva_awt_Toolkit_startColors
  (JNIEnv *, jobject);

/*
 * Class:     charva_awt_Toolkit
 * Method:    sync
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_charva_awt_Toolkit_sync
  (JNIEnv *, jobject);

/*
 * Class:     charva_awt_Toolkit
 * Method:    redrawWin
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_charva_awt_Toolkit_redrawWin
  (JNIEnv *, jobject);

/*
 * Class:     charva_awt_Toolkit
 * Method:    getStringCapability
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_charva_awt_Toolkit_getStringCapability
  (JNIEnv *, jobject, jstring);

/*
 * Class:     charva_awt_Toolkit
 * Method:    getNumericCapability
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_charva_awt_Toolkit_getNumericCapability
  (JNIEnv *, jobject, jstring);

/*
 * Class:     charva_awt_Toolkit
 * Method:    getBooleanCapability
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_charva_awt_Toolkit_getBooleanCapability
  (JNIEnv *, jobject, jstring);

/*
 * Class:     charva_awt_Toolkit
 * Method:    putp
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_charva_awt_Toolkit_putp
  (JNIEnv *, jobject, jstring);

/*
 * Class:     charva_awt_Toolkit
 * Method:    print
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_charva_awt_Toolkit_print
  (JNIEnv *, jobject, jstring);

/*
 * Class:     charva_awt_Toolkit
 * Method:    initColorPair
 * Signature: (III)V
 */
JNIEXPORT void JNICALL Java_charva_awt_Toolkit_initColorPair
  (JNIEnv *, jobject, jint, jint, jint);

/*
 * Class:     charva_awt_Toolkit
 * Method:    getTtyName
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_charva_awt_Toolkit_getTtyName
  (JNIEnv *, jobject);

/*
 * Class:     charva_awt_Toolkit
 * Method:    getColor
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_charva_awt_Toolkit_getColor
  (JNIEnv *, jclass, jint);

/*
 * Class:     charva_awt_Toolkit
 * Method:    getMouseEventInfo
 * Signature: ()Lcharva/awt/MouseEventInfo;
 */
JNIEXPORT jobject JNICALL Java_charva_awt_Toolkit_getMouseEventInfo
  (JNIEnv *, jobject);

/*
 * Class:     charva_awt_Toolkit
 * Method:    readKey
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_charva_awt_Toolkit_readKey
  (JNIEnv *, jobject);

/*
 * Class:     charva_awt_Toolkit
 * Method:    init
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_charva_awt_Toolkit_init
  (JNIEnv *, jclass);

/*
 * Class:     charva_awt_Toolkit
 * Method:    getx
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_charva_awt_Toolkit_getx
  (JNIEnv *, jobject);

/*
 * Class:     charva_awt_Toolkit
 * Method:    gety
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_charva_awt_Toolkit_gety
  (JNIEnv *, jobject);

/*
 * Class:     charva_awt_Toolkit
 * Method:    getAttribute
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_charva_awt_Toolkit_getAttribute
  (JNIEnv *, jclass, jint);

/*
 * Class:     charva_awt_Toolkit
 * Method:    getACSchar
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_charva_awt_Toolkit_getACSchar
  (JNIEnv *, jclass, jint);

#ifdef __cplusplus
}
#endif
#endif
